<type>note</type>
<lesson>add<class>
<title>grid布局</title>

Grid网格布局是专门为网页布局设计的, 不同于之前的table和div布局.

定义(grid-container):

    display: grid;
    grid-template-column: 1fr 2fr;                      定义栏数及尺寸, 可以使用fr/rem/百分比/数值
    grid-template-rows: 1rem 1fr 20% 100px;             定义行数及尺寸, 可以使用fr/rem/百分比/数值

    指定相同宽度的多个栏也可以使用:
    grid-template-column: repeat(3, 1fr);               意思为3栏, 每栏1fr.

    还可以使用minmax对栏宽度灵活设置:
    grid-template-column: 1fr minmax(50%, auto) 1fr;    意思为3栏, 第二栏最小宽度占50%, 最大自动, 若只指定一个值则同时作用min/max.
    grid-template-rows: 1fr minmax(1rem auto) 1fr;      当rows的max设置为auto时, 高度会自动调整为放下整个内容的高度.

间隔(grid-container):

    grid-gap: 10px 10px;                                第一个值为column之间的间隔, 第二个值为rows之间的间隔, 若只指定一个值则同时作用column/rows.
    grid-column-gap: 10px;                              单独指定column之间的间隔
    grid-rows-gap: 10px;                                单独指定rows之间的间隔

栏线及栏线的自定义命名(grid-container):

    当使用Grid布局时会自动设置栏线, 如果设置一个3栏3行的Grid布局, 则column栏线有4条, rows栏线有4条.
    栏线的默认命名会遵从你为item设置的名称, 比如设置grid布局的子元素item属性grid-area: header; 则此网格的起始栏线名为header-start, 结束的栏线名为header-end;

    当然那你也可以为栏线自定义名称, 语法如下:
    grid-template-column: [name1] 1fr [name2] 1fr [name3];

尺寸(grid-items):

    默认每个item的尺寸只占一格, 如果要设置其他宽度, 需要使用到下列属性:
    grid-column-start: 2;                               指定item-column开始的栏线
    grid-column-end: 3;                                 指定item-column结束的栏线
    grid-rows-start: 2;                                 指定item-rows开始的栏线
    grid-rows-end: 3;                                   指定item-rows结束的栏线

    符合写法:
    grid-column: 2/3;                                   开始于栏线2, 结束与栏线3
    grid-rows: 2/3;                                     开始于栏线2, 结束与栏线3
    grid-rows: 2;                                       开始于栏线2, 只占一个格子
    上述情况指定item会被排列到中间, 其他的item会自动按顺序重排填满空白.

布局(grid-items):

    使用grid-template-areas来指定栏属关系
    例:
    (grid-container)--------------------
        display: grid;
        grid-template-column: 3fr 1fr;
        grid-template-rows: 3rem 3rem 1fr 3rem;
        
        grid-template-areas:
        "header header"
        "nav nav"
        "main aside"
        "footer footer"

    (grid-items)--------------------
        grid-area: header;
        grid-area: nav;
        grid-area: main;
        grid-area: aside;
        grid-area: footer;

隐形网格:

    如果子元素item的数量超过已被布局定义的数量, 则这些元素会自动生成隐形网格, 定义这些隐形网格的尺寸会用到下列属性:
    grid-auto-column: 1fr;
    grid-auto-rows: 1fr;
    grid-auto-flow: 1fr 1fr;                            第一个数值为column, 第二个数值为rows.

堆叠和对齐(grid-container/items):

    网格式可以堆叠的, 通过z-index属性指定层级.

    当网格宽度或高度没有占满父级空间时, 可对其进行对齐操作:
    justify-items: start/end/center/stretch;            水平对齐方式
    aling-items: start/end/center/stretch;              垂直对齐方式

    对元素进行整体对齐:
    justfy-content: satrt/end/center/space-between/space-around;           水平对齐方式
    aling-content: start/end/center/space-between/space-around;            垂直对齐方式