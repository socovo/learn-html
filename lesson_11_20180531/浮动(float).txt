<type>note</type>
<lesson>11</lesson>
<time>20180531</time>
<title>浮动(float)</title>

使用display:inline-block使元素在行内排成一行时:

	缺点:	
		会解析一个换行符的字符间隙
		有时会处理复杂的基线对齐情况

	如果使用浮动:
		元素脱离文档流, 不会解析空格 ,不占据位置

浮动的特殊情况:

	如果只给了前面的的盒子加了浮动, 后面的元素(不使用浮动时)会占据它的位置
	设置某元素为浮动之后只会影响其后面的元素, 不会影响前面的元素
	父级宽度不够元素会自动换行
	父级宽度不够, 设置浮动的子元素如果有高度大于第一个子元素的, 后面的子元素换行时会卡在高度较高的后面, 即浮动行以第一个浮动子元素高度为准

float浮动后的元素特征:

	使 块级元素 由原来的独占一行变为由内容撑开宽度
	使 行内(内联)元素 变为 块级元素(支持宽高), 不设置宽度时, 默认内容撑开宽度
	支持margin/padding等CSS样式, 但是会使margin:auto, vertical-align失效(vertical-align只对行内元素生效).

	注意:
	子元素设置为浮动, 父级元素如果没有设置高度, 会出现高度坍塌的情况.
	所谓高度坍塌, 就是说, 子元素无法撑开父元素的高度, 父级元素高度会变成0.

	为了解决父元素高度坍塌的问题, 我们有下列解决办法:
	
	1. 父级元素设置指定高度, 这种情况下响应式布局会出问题(不推荐使用)
	2. 父级元素加overflow:hidden;触发BFC, 使得父级计算高度时会把浮动元素也计算在内.(建议)
	3. 添加一个子元素(要求块级子元素), 不使用浮动属性, 给这个子元素指定高度. 因为这样的子元素是可以撑开父级高度的.(不推荐使用)
	4. 给3.中的子元素使用clear:left/right/both;设置左侧或右侧或双侧不允许浮动(指定侧要与使用float属性的子元素的float方向一致, 不然不起作用)(不推荐使用)
	5. 同样的方法,我们使用伪类选择器 父级标签:after (这相当于添加了子元素)并赋予下列属性(目前主流方法, 推荐使用):
		父级元素:after {
			display:block;
			content:'';
			clear:both;
		}