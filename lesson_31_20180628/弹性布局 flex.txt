<type>note</type>
<lesson>31</lesson>
<time>20180628</time>
<title>弹性布局(flex)</title>

任何一种容器都可以指定为为flex布局:

    块级元素使用    display: flex;
    行元素使用      display: inline-flex;

基本概念:

    采用flex布局的元素称为flex容器(flex container), 其子元素自动成为容器成员, 称为flex项目(flex item).
    注意: 设为flex布局以后, 子元素的float、clear和vertical-align属性将失效.

    容器默认存在两根轴: 主轴和交叉轴, 主轴为 flex-direction 指定的 flex-item 排列方向.
    主轴的起点叫 main-start , 结束点叫 main-end .
    交叉轴的起点叫 cross-start , 结束点叫 cross-end .
    每个项目(flex-item)占据的主轴空间叫 main-size , 占据的交叉空间叫 cross-size .

flex-container(容器)的几个属性:

	1. flex-diraction: 设定flex-item的排列方向, 有4个值
		row             (默认值)主轴为水平方向, 起点在左端
		row-reverse     主轴为水平方向, 起点在右端
		column          主轴为垂直方向, 起点在上沿
		column-reverse  主轴方向为垂直方向, 起点在下沿

	2. flex-wrap: 设定当flex-item在一行排不下时如何换行, 有3个值
		nowrap          (默认值)不换行, 元素宽度会被均匀压缩
		wrap            换行, 元素宽度不会被压缩, 第一行在上面
		wrap-reverse    换行, 元素宽度不会被压缩, 第一行在下面

	3. flex-flow: 是flex-direction和flex-wrap的合并简写形式, 默认值为 row nowrap.

	4. justify-content: 定义在主轴上的对齐方式, 有5个值.
		flex-start      默认值, 起点对齐
		flex-end        结束点对齐
		center          居中对齐
		space-btween    两端对齐, 项目之间间隔相等
		space-around    每个项目两侧的间距都相等, 所以item之间的距离是item到边框的2倍

	5. align-items: 定义在交叉轴上的对齐方式, 有5个值.
		flex-start      默认值, 交叉轴起点对齐
		flex-end        交叉轴结束点对齐
		center          交叉轴中点对齐
		baseline        其他项目的文字对齐到第一个项目的文字的基线
		stretch         如果项目没设置高度或设置为auto, 将占满整个容器的高度.

	6. align-content: 定义在多条主轴线的情况下的交叉轴上的对齐方式, 如果只有1条主轴线, 则该属性不起作用, 有6个值
		flex-start      与交叉轴的起点对齐
		flex-end        与交叉轴的终点对齐
		center          与交叉轴的中点对齐
		space-between   与交叉轴两端对齐，轴线之间的间隔平均分布
		space-around    每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍
		stretch         默认值, 轴线占满整个交叉轴

flex-item(项目)的属性:

    order       定义项目的排列顺序, 数值越小, 排列越靠前, 最小值为0.
    flex-grow   定义项目的放大比例, 默认为0, 即如果存在剩余空间, 也不放大.
                计算公式: 所占空间 = 原有空间 + 剩余空间 * [ n / ( n + m ) ]
				原有空间指 指定flex-item原先所占的空间
				剩余空间指 父级设定空间 - 所有flex-item相加所占的总空间
				n为指定flex-item定义的放大比例, m为其他flex-item定义的放大比例之和

				用法举例: 设定第2项宽度为其他项目的3倍
					#main {
						width: 350px;
						height: 100px;
						display: flex;
					}
					#main div:nth-of-type(1) {flex-grow: 1;}
					#main div:nth-of-type(2) {flex-grow: 3;}
					#main div:nth-of-type(3) {flex-grow: 1;}
					#main div:nth-of-type(4) {flex-grow: 1;}
					#main div:nth-of-type(5) {flex-grow: 1;}

    flex-shrink 定义项目的缩小比例, 默认为1, 即如果剩余空间不足, 该项目将缩小.
                计算公式: 所占空间 = 原有空间 - 超出空间 * [ n / ( n + m ) ]
				原有空间指 指定flex-item原先所占的空间
				超出空间指 所有flex-item相加所占的总空间 - 父级设定空间
				n为指定flex-item定义的缩小比例, m为其他flex-item定义的缩小比例之和

    flex-basis  定义在分配剩余空间之前, 项目占据的主轴空间的基准值, 浏览器根据这个属性, 计算主轴是否有多余空间.
                它的默认值为auto, 即项目的本来大小, 由内容撑开的宽度.
                它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间, 也可以设置百分比。

    flex        复合写法, 默认值是initial (0 1 auto), 即不放大, 缩小, 本来大小.
                该属性有两个快捷值：auto (1 1 auto) [跟随调整放大缩小] 和 none (0 0 auto) [不放大也不缩小]。
                建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。

    align-self  允许单个项目和其他项目有不一样的对齐方式, 可覆盖align-item属性, 默认值为auto, 表示继承父级属性.
                如果没有父元素, 等同于stretch. 该属性有6个值, 除了auto其他的和align-item一样.
